# cyphar.com: my personal site's flask app
# Copyright (C) 2014-2019 Aleksa Sarai <cyphar@cyphar.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Redirect everything to SSL, and provide acme-challenge support.
server {
	listen 80 default_server;
	listen [::]:80 default_server;
	server_name .cyphar.com;

	location / {
		return 302 https://$remote_addr$request_uri;
	}

	# Needed for http-01 ACME validation.
	location /.well-known/acme-challenge/ {
		root /srv/wkd;
	}
}

# Redirect cyphar.com to www.cyphar.com.
server {
	listen 443 ssl;
	listen [::]:443 ssl;
	server_name cyphar.com;

	ssl_certificate /etc/letsencrypt/live/www.cyphar.com/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/www.cyphar.com/privkey.pem;
	include /srv/nginx-tls.conf;

	location / {
		return 302 https://www.cyphar.com$request_uri;
	}

	# Static well-known metadata.
	location /.well-known/matrix/ {
		root /srv/wkd;
		expires 24h;
		default_type application/json;

		include /srv/nginx-tls-headers.conf;
		add_header Access-Control-Allow-Origin "*";
		add_header Cache-Control "public";
	}
}

# Serve Matrix client-server API.
server {
	# Client-Servier API (requires matrix.cyphar.com certificate).
	listen 443 ssl;
	listen [::]:443 ssl;
	# Server-Servier API (requires cyphar.com certificate).
	listen 8448 ssl;
	listen [::]:8448 ssl;

	server_name matrix.cyphar.com;

	# This certificate *must* contain an entry for both cyphar.com and
	# matrix.cyphar.com. Otherwise federation will absolutely fail.
	ssl_certificate /etc/letsencrypt/live/matrix.cyphar.com/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/matrix.cyphar.com/privkey.pem;
	include /srv/nginx-tls.conf;

	# Tunnel to LXC.
	location / {
		client_max_body_size 128M;
		include /srv/nginx-tls-headers.conf;
		add_header Access-Control-Allow-Origin "*";
		proxy_pass http://127.0.0.1:8008;
	}
}

# Serve LGTM service.
server {
	listen 443 ssl;
	listen [::]:443 ssl;
	server_name lgtm.cyphar.com;

	ssl_certificate /etc/letsencrypt/live/lgtm.cyphar.com/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/lgtm.cyphar.com/privkey.pem;
	include /srv/nginx-tls.conf;

	# Tunnel to LXC.
	location / {
		include /srv/nginx-tls-headers.conf;
		proxy_pass http://127.0.0.1:8090;
	}
}

# Static files.
server {
	listen 443 ssl;
	listen [::]:443 ssl;
	server_name static.cyphar.com;

	ssl_certificate /etc/letsencrypt/live/www.cyphar.com/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/www.cyphar.com/privkey.pem;
	include /srv/nginx-tls.conf;

	# Allow indexes for static directory.
	location / {
		root /srv/static;
		autoindex on;
	}
}

# www.cyphar.com config.
server {
	listen 443 ssl default_server;
	listen [::]:443 ssl default_server;
	server_name www.cyphar.com;

	ssl_certificate /etc/letsencrypt/live/www.cyphar.com/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/www.cyphar.com/privkey.pem;
	include /srv/nginx-tls.conf;

	# Tunnel to LXC.
	location / {
		include /srv/nginx-tls-headers.conf;
		proxy_pass http://127.0.0.1:8080;
	}

	# Static well-known metadata.
	location /.well-known/ {
		root /srv/wkd;
		expires 24h;

		include /srv/nginx-tls-headers.conf;
		add_header Access-Control-Allow-Origin "*";
		add_header Cache-Control "public";
	}
}

# beta.cyphar.com config.
server {
	listen 443 ssl;
	listen [::]:443 ssl;
	server_name beta.cyphar.com;

	ssl_certificate /etc/letsencrypt/live/beta.cyphar.com/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/beta.cyphar.com/privkey.pem;
	include /srv/nginx-tls.conf;

	# Tunnel to LXC.
	location / {
		include /srv/nginx-tls-headers.conf;
		proxy_pass http://127.0.0.1:8081;
	}
}
