# Copyright (C) 2014-2020 Aleksa Sarai <cyphar@cyphar.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

log_format stripsecrets
				'$remote_addr $host - $remote_user [$time_local] '
				'"$secretfilter" $status $body_bytes_sent '
				'$request_length $request_time $upstream_response_time '
				'"$http_referer" "$http_user_agent"';

map $request $secretfilter {
	~*^(?<prefix1>.*[\?&]api_key=)([^&]*)(?<suffix1>.*)$  "${prefix1}***$suffix1";
	default                                               $request;
}

server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;
	server_name jellyfin.cyphar.com;

	ssl_certificate /etc/letsencrypt/live/jellyfin.cyphar.com/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/jellyfin.cyphar.com/privkey.pem;
	include conf.d/nginx-tls.conf;

	set $jellyfin unix:/srv/run/jellyfin.sock:;
	#resolver 127.0.0.1 valid=30;

	access_log /var/log/nginx/access.log stripsecrets;

	location = / {
		# CSP policy is from <https://jellyfin.org/docs/general/networking/nginx.html>.
		add_header Content-Security-Policy
			"default-src https: data: blob: http://image.tmdb.org; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline' https://www.gstatic.com/cv/js/sender/v1/cast_sender.js https://www.youtube.com blob:; worker-src 'self' blob:; connect-src 'self'; object-src 'none'; frame-ancestors 'self'" always;
		include conf.d/nginx-tls-headers.conf;
		return 302 https://$host/web/;
	}

	# Proxy main Jellyfin traffic
	location / {
		# CSP policy is from <https://jellyfin.org/docs/general/networking/nginx.html>.
		add_header Content-Security-Policy
			"default-src https: data: blob: http://image.tmdb.org; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline' https://www.gstatic.com/cv/js/sender/v1/cast_sender.js https://www.youtube.com blob:; worker-src 'self' blob:; connect-src 'self'; object-src 'none'; frame-ancestors 'self'" always;
		include conf.d/nginx-tls-headers.conf;
		proxy_pass http://$jellyfin;
		# Disable buffering to reduce resource cost of streaming.
		proxy_buffering off;
	}

	# Translate /web/ to allow /web/#!/ instead of requiring /web/index.html/#!/.
	location = /web/ {
		# CSP policy is from <https://jellyfin.org/docs/general/networking/nginx.html>.
		add_header Content-Security-Policy
			"default-src https: data: blob: http://image.tmdb.org; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline' https://www.gstatic.com/cv/js/sender/v1/cast_sender.js https://www.youtube.com blob:; worker-src 'self' blob:; connect-src 'self'; object-src 'none'; frame-ancestors 'self'" always;
		include conf.d/nginx-tls-headers.conf;
		proxy_pass http://$jellyfin/web/index.html;
	}

	# Jellyfin websockets traffic.
	location /socket {
		# CSP policy is from <https://jellyfin.org/docs/general/networking/nginx.html>.
		add_header Content-Security-Policy
			"default-src https: data: blob: http://image.tmdb.org; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline' https://www.gstatic.com/cv/js/sender/v1/cast_sender.js https://www.youtube.com blob:; worker-src 'self' blob:; connect-src 'self'; object-src 'none'; frame-ancestors 'self'" always;
		include conf.d/nginx-tls-headers.conf;
		proxy_pass http://$jellyfin;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
	}
}
